name: CI Tests

on:
  pull_request:
  workflow_call:
  schedule:
    - cron: '0 0 * * 0'

jobs:
  tests:
    name: Run Tests on PHP ${{ matrix.php }}
    runs-on: ubuntu-latest
    concurrency:
      group: ci-tests-php-${{ matrix.php }}
      cancel-in-progress: false

    strategy:
      matrix:
        php: [8.3]

    env:
      extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, parallel
      key: extensions-cache-00

    steps:
      - uses: actions/checkout@v4

      - name: Setup cache environment
        id: extensions-cache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          key: ${{ env.key }}

      - name: Cache extensions
        uses: actions/cache@v4
        with:
          path: ${{ steps.extensions-cache.outputs.dir }}
          key: "${{ steps.extensions-cache.outputs.key }}-${{ env.phpts }}"
          restore-keys: "${{ steps.extensions-cache.outputs.key }}-${{ env.phpts }}"

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        env:
          phpts: ts
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.extensions }}
          ini-values: opcache.enable_cli=1, opcache.enable=1, opcache.jit_buffer_size=64M, opcache.jit=1205, opcache.enable_file_override=1, opcache.max_accelerated_files=4000, opcache.validate_timestamps=0, opcache.interned_strings_buffer=8
          coverage: none

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Composer dependencies
        uses: ramsey/composer-install@v2
        with:
          composer-options: --prefer-dist --optimize-autoloader --no-suggest

      - name: Generate app key
        run: echo "APP_KEY=$(php artisan --no-ansi key:generate --show)" >> $GITHUB_ENV

      - name: Install Node dependencies
        run: npm ci

      - name: Build frontend assets
        run: npm run build

      - name: Execute tests
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION || 'us-east-1' }}
          DYNAMODB_DATA_TABLE: ${{ vars.SLS_SERVICE || 'app' }}-testing-data
        run: php artisan test --parallel
